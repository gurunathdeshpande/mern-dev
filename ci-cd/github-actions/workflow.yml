name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Backend
      - name: Install backend dependencies
        run: cd backend && npm install

      - name: Backend lint
        run: cd backend && npm run lint || true

      # Frontend
      - name: Install frontend dependencies
        run: cd frontend && npm install

      - name: Frontend lint
        run: cd frontend && npm run lint || true

      - name: Build frontend
        run: cd frontend && npm run build

      # Docker setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push backend
      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/student-feedback-backend:latest

      # Build and push frontend
      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/student-feedback-frontend:latest

      # Deploy to server (if you have one)
      - name: Deploy to server
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/deployment
            docker-compose pull
            docker-compose up -d